{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CloudGetService = /*#__PURE__*/(() => {\n  class CloudGetService {\n    constructor(http) {\n      this.http = http; // Collections\n\n      this.collections = [];\n      this.collection = {}; // Notices\n\n      this.notices = [];\n      this.notice = {}; // Scanned folders\n\n      this.scanFolders = [];\n      this.getCloudConfig();\n    }\n    /** Récupérer les getters et setters sur le Cloud */\n\n\n    getCloudConfig() {\n      this.http.get(environment.CLOUD_CONFIG).subscribe(conf => {\n        conf.forEach(c => {\n          if (c.idconfigurations == 'getters') this.config = c;\n          if (c.idconfigurations == 'schemas') this.schemas = c;\n        });\n        console.log(this.config, this.schemas);\n        this.getCollections();\n      });\n    }\n    /** Récupérer la liste des collections */\n\n\n    getCollections() {\n      this.http.get(this.config.collections).subscribe(collecs => {\n        this.collections = collecs;\n        console.log(collecs);\n      });\n    }\n\n    /** Get list of notices from a collection */\n    getNoticesByCollec(ids) {\n      this.http.post(this.config.notices, ids).subscribe(resp => {\n        this.notices = resp.Responses.notices;\n        console.log(resp.Responses, resp.Responses.notices);\n      });\n    }\n    /** Get list of folders in S3 */\n\n\n    getFolders() {\n      this.http.get(this.config.xmp).subscribe(resp => {\n        this.scanFolders = resp;\n      });\n    }\n    /** Scan a folder and get data */\n\n\n    scanFolder(dir) {\n      this.http.post(this.config.xmp, dir).subscribe({\n        next: resp => {\n          this.scannedData = resp;\n          this.setScannedCollection();\n          console.log(resp);\n        },\n        error: e => console.error(e),\n        complete: () => console.info('complete')\n      } //   (resp:any) => {\n      //   this.scannedData = resp;\n      //   this.setScannedCollection();\n      //   console.log(resp);\n      // },\n      // er => console.log(er);\n      );\n    }\n    /** Get data to create a collection from scanned set of data */\n\n\n    setScannedCollection() {\n      this.collection.notices = this.scannedData;\n      this.scannedData.forEach(n => {\n        // Create series\n        if (n.series) {\n          if (!this.collection.series.includes(n.series)) this.collection.series = [this.collection.series, ...n.series];\n        }\n\n        ; // Add Data to\n\n        for (let i in this.collection) {\n          if (!this.collection[i] && n[i] && i != 'series' && i != 'notices') this.collection[i] = n[i];\n        }\n      });\n      console.log(this.collection);\n    }\n\n    getScannedSeries() {}\n\n    setScannedNotices() {}\n\n  }\n\n  CloudGetService.ɵfac = function CloudGetService_Factory(t) {\n    return new (t || CloudGetService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  CloudGetService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CloudGetService,\n    factory: CloudGetService.ɵfac,\n    providedIn: 'root'\n  });\n  return CloudGetService;\n})();","map":null,"metadata":{},"sourceType":"module"}