{"ast":null,"code":"import * as i0 from \"@angular/core\";\n/**\r\n * Filtre sur les notices en utilisant un objet de filtre\r\n * La valeur 'pure' permet de traiter les changements de l'objet filtre en temps réel\r\n */\n\nexport let FiltreNoticesPipe = /*#__PURE__*/(() => {\n  class FiltreNoticesPipe {\n    transform(values, filtre) {\n      if (!values || !values.length) return [];\n      if (!filtre) return values;\n\n      if (filtre.libre.length > 2) {\n        return values.filter(v => {\n          let tmp = JSON.stringify(v).toLowerCase();\n\n          if (tmp.indexOf(filtre.libre) !== -1) {\n            return v;\n          }\n\n          ;\n        });\n      } else if (filtre.type) {\n        return values.filter(v => {\n          if (v.dublincore.format.indexOf(filtre.type) !== -1) {\n            return v;\n          }\n\n          ;\n        });\n      } else if (filtre.dateDebut) {\n        return values.filter(v => {\n          let debut = Date.parse(filtre.dateDebut);\n\n          if (v.dublincore.date >= debut) {\n            return v;\n          }\n\n          ;\n        });\n      } else if (filtre.dateFin) {\n        return values.filter(v => {\n          let fin = Date.parse(filtre.dateFin);\n\n          if (v.dublincore.date <= fin) {\n            return v;\n          }\n\n          ;\n        });\n      } else {\n        return values;\n      }\n    }\n\n  }\n\n  FiltreNoticesPipe.ɵfac = function FiltreNoticesPipe_Factory(t) {\n    return new (t || FiltreNoticesPipe)();\n  };\n\n  FiltreNoticesPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"filtreNotices\",\n    type: FiltreNoticesPipe,\n    pure: false\n  });\n  return FiltreNoticesPipe;\n})();","map":null,"metadata":{},"sourceType":"module"}